//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestCommandBroadcaster.CommandBroadcastService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientMachineRegisterInfo", Namespace="http://schemas.datacontract.org/2004/07/CommandScheduler.Infrastructure.Server.Da" +
        "taContracts")]
    [System.SerializableAttribute()]
    public partial class ClientMachineRegisterInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressV4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddressV4 {
            get {
                return this.IPAddressV4Field;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressV4Field, value) != true)) {
                    this.IPAddressV4Field = value;
                    this.RaisePropertyChanged("IPAddressV4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName {
            get {
                return this.MachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineNameField, value) != true)) {
                    this.MachineNameField = value;
                    this.RaisePropertyChanged("MachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommandResponse", Namespace="http://schemas.datacontract.org/2004/07/CommandScheduler.Infrastructure.Server.Re" +
        "sponse")]
    [System.SerializableAttribute()]
    public partial class CommandResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommandInfo", Namespace="http://schemas.datacontract.org/2004/07/CommandScheduler.Infrastructure.Server.Da" +
        "taContracts")]
    [System.SerializableAttribute()]
    public partial class CommandInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressV4Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandText {
            get {
                return this.CommandTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandTextField, value) != true)) {
                    this.CommandTextField = value;
                    this.RaisePropertyChanged("CommandText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddressV4 {
            get {
                return this.IPAddressV4Field;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressV4Field, value) != true)) {
                    this.IPAddressV4Field = value;
                    this.RaisePropertyChanged("IPAddressV4");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommandBroadcastService.ICommandSubscribeService", CallbackContract=typeof(TestCommandBroadcaster.CommandBroadcastService.ICommandSubscribeServiceCallback))]
    public interface ICommandSubscribeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandSubscribeService/RegisterClientMachine", ReplyAction="http://tempuri.org/ICommandSubscribeService/RegisterClientMachineResponse")]
        TestCommandBroadcaster.CommandBroadcastService.CommandResponse RegisterClientMachine(TestCommandBroadcaster.CommandBroadcastService.ClientMachineRegisterInfo regInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandSubscribeService/RegisterClientMachine", ReplyAction="http://tempuri.org/ICommandSubscribeService/RegisterClientMachineResponse")]
        System.Threading.Tasks.Task<TestCommandBroadcaster.CommandBroadcastService.CommandResponse> RegisterClientMachineAsync(TestCommandBroadcaster.CommandBroadcastService.ClientMachineRegisterInfo regInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandSubscribeServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommandSubscribeService/OnReceiveCommand")]
        void OnReceiveCommand(TestCommandBroadcaster.CommandBroadcastService.CommandInfo command);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandSubscribeServiceChannel : TestCommandBroadcaster.CommandBroadcastService.ICommandSubscribeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandSubscribeServiceClient : System.ServiceModel.DuplexClientBase<TestCommandBroadcaster.CommandBroadcastService.ICommandSubscribeService>, TestCommandBroadcaster.CommandBroadcastService.ICommandSubscribeService {
        
        public CommandSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CommandSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CommandSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommandSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommandSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public TestCommandBroadcaster.CommandBroadcastService.CommandResponse RegisterClientMachine(TestCommandBroadcaster.CommandBroadcastService.ClientMachineRegisterInfo regInfo) {
            return base.Channel.RegisterClientMachine(regInfo);
        }
        
        public System.Threading.Tasks.Task<TestCommandBroadcaster.CommandBroadcastService.CommandResponse> RegisterClientMachineAsync(TestCommandBroadcaster.CommandBroadcastService.ClientMachineRegisterInfo regInfo) {
            return base.Channel.RegisterClientMachineAsync(regInfo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommandBroadcastService.ICommandBroadcastService")]
    public interface ICommandBroadcastService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandBroadcastService/BroadCastCommand", ReplyAction="http://tempuri.org/ICommandBroadcastService/BroadCastCommandResponse")]
        TestCommandBroadcaster.CommandBroadcastService.CommandResponse BroadCastCommand(TestCommandBroadcaster.CommandBroadcastService.CommandInfo command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandBroadcastService/BroadCastCommand", ReplyAction="http://tempuri.org/ICommandBroadcastService/BroadCastCommandResponse")]
        System.Threading.Tasks.Task<TestCommandBroadcaster.CommandBroadcastService.CommandResponse> BroadCastCommandAsync(TestCommandBroadcaster.CommandBroadcastService.CommandInfo command);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandBroadcastServiceChannel : TestCommandBroadcaster.CommandBroadcastService.ICommandBroadcastService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandBroadcastServiceClient : System.ServiceModel.ClientBase<TestCommandBroadcaster.CommandBroadcastService.ICommandBroadcastService>, TestCommandBroadcaster.CommandBroadcastService.ICommandBroadcastService {
        
        public CommandBroadcastServiceClient() {
        }
        
        public CommandBroadcastServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommandBroadcastServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandBroadcastServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandBroadcastServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestCommandBroadcaster.CommandBroadcastService.CommandResponse BroadCastCommand(TestCommandBroadcaster.CommandBroadcastService.CommandInfo command) {
            return base.Channel.BroadCastCommand(command);
        }
        
        public System.Threading.Tasks.Task<TestCommandBroadcaster.CommandBroadcastService.CommandResponse> BroadCastCommandAsync(TestCommandBroadcaster.CommandBroadcastService.CommandInfo command) {
            return base.Channel.BroadCastCommandAsync(command);
        }
    }
}
